(globalThis.TURBOPACK||(globalThis.TURBOPACK=[])).push(["object"==typeof document?document.currentScript:void 0,66793,54513,26198,63971,32537,19182,2283,65251,21484,86492,e=>{"use strict";let t,r,i,n;e.s([],66793);var a=e.i(47760);class s{static init(e){Object.defineProperty(this,"resizeTo",{set(e){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=e,e&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{let e,t;if(this._resizeTo){if(this._cancelResize(),this._resizeTo===globalThis.window)e=globalThis.innerWidth,t=globalThis.innerHeight;else{let{clientWidth:r,clientHeight:i}=this._resizeTo;e=r,t=i}this.renderer.resize(e,t),this.render()}},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}s.extension=a.ExtensionType.Application;var o=e.i(59750),l=e.i(6972);class u{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(e){this._ticker&&this._ticker.remove(this.render,this),this._ticker=e,e&&e.add(this.render,this,o.UPDATE_PRIORITY.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?l.Ticker.shared:new l.Ticker,e.autoStart&&this.start()}static destroy(){if(this._ticker){let e=this._ticker;this.ticker=null,e.destroy()}}}u.extension=a.ExtensionType.Application,a.extensions.add(s),a.extensions.add(u),e.s([],54513);var d=e.i(99166),h=e.i(22558),c=e.i(74179),p=e.i(89506),f=e.i(1187);class m{destroy(){this.batches.forEach(e=>{c.BigPool.return(e)}),this.batches.length=0}constructor(){this.batches=[],this.batched=!1}}class x{contextChange(){this._adaptor.contextChange(this.renderer)}validateRenderable(e){let t=e.context,r=!!e._gpuData,i=this.renderer.graphicsContext.updateGpuContext(t);return!!i.isBatchable||r!==i.isBatchable}addRenderable(e,t){let r=this.renderer.graphicsContext.updateGpuContext(e.context);e.didViewUpdate&&this._rebuild(e),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){let t=this._getGpuDataForRenderable(e).batches;for(let e=0;e<t.length;e++){let r=t[e];r._batcher.updateElement(r)}}execute(e){if(!e.isRenderable)return;let t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;let i=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;let n=i.resources.localUniforms.uniforms;n.uTransformMatrix=e.groupTransform,n.uRound=t._roundPixels|e._roundPixels,(0,p.color32BitToUniform)(e.groupColorAlpha,n.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){let t=this._getGpuDataForRenderable(e),r=this.renderer.graphicsContext.updateGpuContext(e.context);t.destroy(),r.isBatchable&&this._updateBatchesForRenderable(e,t)}_addToBatcher(e,t){let r=this.renderer.renderPipes.batch,i=this._getGpuDataForRenderable(e).batches;for(let e=0;e<i.length;e++){let n=i[e];r.addToBatch(n,t)}}_getGpuDataForRenderable(e){return e._gpuData[this.renderer.uid]||this._initGpuDataForRenderable(e)}_initGpuDataForRenderable(e){let t=new m;return e._gpuData[this.renderer.uid]=t,t}_updateBatchesForRenderable(e,t){let r=e.context,i=this.renderer.graphicsContext.getGpuContext(r),n=this.renderer._roundPixels|e._roundPixels;t.batches=i.batches.map(t=>{let r=c.BigPool.get(f.BatchableGraphics);return t.copyTo(r),r.renderable=e,r.roundPixels=n,r})}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null}constructor(e,t){this.state=h.State.for2d(),this.renderer=e,this._adaptor=t,this.renderer.runners.contextChange.add(this)}}x.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"graphics"},a.extensions.add(x),a.extensions.add(d.GraphicsContextSystem),e.s([],26198);var g=e.i(28959),_=e.i(94359),T=e.i(32543),y=e.i(60728);class b{get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(e){this._topology=e}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}setTexture(e){this.texture!==e&&(this.texture=e,this._textureMatrixUpdateId=-1)}get uvs(){let e=this.geometry.getBuffer("aUV"),t=e.data,r=t,i=this.texture.textureMatrix;return i.isSimple||(r=this._transformedUvs,(this._textureMatrixUpdateId!==i._updateID||this._uvUpdateId!==e._updateID)&&((!r||r.length<t.length)&&(r=this._transformedUvs=new Float32Array(t.length)),this._textureMatrixUpdateId=i._updateID,this._uvUpdateId=e._updateID,i.multiplyUvs(t,r))),r}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._textureMatrixUpdateId=-1,this._uvUpdateId=-1}}class v{destroy(){}}class P{validateRenderable(e){let t=this._getMeshData(e),r=t.batched,i=e.batched;if(t.batched=i,r!==i)return!0;if(i){let r=e._geometry;if(r.indices.length!==t.indexSize||r.positions.length!==t.vertexSize)return t.indexSize=r.indices.length,t.vertexSize=r.positions.length,!0;let i=this._getBatchableMesh(e);return i.texture.uid!==e._texture.uid&&(i._textureMatrixUpdateId=-1),!i._batcher.checkAndUpdateTexture(i,e._texture)}return!1}addRenderable(e,t){let r=this.renderer.renderPipes.batch,i=this._getMeshData(e);if(e.didViewUpdate){var n,a;i.indexSize=null==(n=e._geometry.indices)?void 0:n.length,i.vertexSize=null==(a=e._geometry.positions)?void 0:a.length}if(i.batched){let i=this._getBatchableMesh(e);i.setTexture(e._texture),i.geometry=e._geometry,r.addToBatch(i,t)}else r.break(t),t.add(e)}updateRenderable(e){if(e.batched){let t=this._getBatchableMesh(e);t.setTexture(e._texture),t.geometry=e._geometry,t._batcher.updateElement(t)}}execute(e){if(!e.isRenderable)return;e.state.blendMode=(0,y.getAdjustedBlendModeBlend)(e.groupBlendMode,e.texture._source);let t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),(0,p.color32BitToUniform)(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new v),e._gpuData[this.renderer.uid].meshData||this._initMeshData(e)}_initMeshData(e){return e._gpuData[this.renderer.uid].meshData={batched:e.batched,indexSize:0,vertexSize:0},e._gpuData[this.renderer.uid].meshData}_getBatchableMesh(e){var t,r;return(t=e._gpuData)[r=this.renderer.uid]||(t[r]=new v),e._gpuData[this.renderer.uid].batchableMesh||this._initBatchableMesh(e)}_initBatchableMesh(e){let t=new b;return t.renderable=e,t.setTexture(e._texture),t.transform=e.groupTransform,t.roundPixels=this.renderer._roundPixels|e._roundPixels,e._gpuData[this.renderer.uid].batchableMesh=t,t}destroy(){this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}constructor(e,t){this.localUniforms=new T.UniformGroup({uTransformMatrix:{value:new g.Matrix,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new _.BindGroup({0:this.localUniforms}),this.renderer=e,this._adaptor=t,this._adaptor.init()}}P.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"mesh"},a.extensions.add(P),e.s([],63971);class S{execute(e,t){let r=e.state,i=e.renderer,n=t.shader||e.defaultShader;n.resources.uTexture=t.texture._source,n.resources.uniforms=e.localUniforms;let a=i.gl,s=e.getBuffers(t);i.shader.bind(n),i.state.set(r),i.geometry.bind(s.geometry,n.glProgram);let o=2===s.geometry.indexBuffer.data.BYTES_PER_ELEMENT?a.UNSIGNED_SHORT:a.UNSIGNED_INT;a.drawElements(a.TRIANGLES,6*t.particleChildren.length,o,0)}}var C=e.i(85465),w=e.i(64957),U=e.i(60406),B=e.i(46820),R=e.i(37024);function G(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=6*e;if(r>65535?t||(t=new Uint32Array(r)):t||(t=new Uint16Array(r)),t.length!==r)throw Error("Out buffer length is incorrect, got ".concat(t.length," and expected ").concat(r));for(let e=0,i=0;e<r;e+=6,i+=4)t[e+0]=i+0,t[e+1]=i+1,t[e+2]=i+2,t[e+3]=i+0,t[e+4]=i+2,t[e+5]=i+3;return t}function M(e,t){let r=[];r.push("\n\n        var index = 0;\n\n        for (let i = 0; i < ps.length; ++i)\n        {\n            const p = ps[i];\n\n            ");let i=0;for(let n in e){let a=e[n];t===a.dynamic&&(r.push("offset = index + ".concat(i)),r.push(a.code),i+=(0,B.getAttributeInfoFromFormat)(a.format).stride/4)}return r.push("\n            index += stride * 4;\n        }\n    "),r.unshift("\n        var stride = ".concat(i,";\n    ")),Function("ps","f32v","u32v",r.join("\n"))}class F{getParticleUpdate(e){let t=function(e){let t=[];for(let r in e){let i=e[r];t.push(r,i.code,i.dynamic?"d":"s")}return t.join("_")}(e);return this._generateParticleUpdateCache[t]||(this._generateParticleUpdateCache[t]=this.generateParticleUpdate(e)),this._generateParticleUpdateCache[t]}generateParticleUpdate(e){return{dynamicUpdate:M(e,!0),staticUpdate:M(e,!1)}}update(e,t){e.length>this._size&&(t=!0,this._size=Math.max(e.length,1.5*this._size|0),this.staticAttributeBuffer=new R.ViewableBuffer(this._size*this._staticStride*16),this.dynamicAttributeBuffer=new R.ViewableBuffer(this._size*this._dynamicStride*16),this.indexBuffer=G(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));let r=this.dynamicAttributeBuffer;if(this._dynamicUpload(e,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,e.length*this._dynamicStride*4,!0),t){let t=this.staticAttributeBuffer;this._staticUpload(e,t.float32View,t.uint32View),this._staticBuffer.setDataWithSize(t.float32View,e.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}constructor(e){var t;this._size=0,this._generateParticleUpdateCache={};let r=this._size=null!=(t=e.size)?t:1e3,i=e.properties,n=0,a=0;for(let e in i){let t=i[e],r=(0,B.getAttributeInfoFromFormat)(t.format);t.dynamic?a+=r.stride:n+=r.stride}this._dynamicStride=a/4,this._staticStride=n/4,this.staticAttributeBuffer=new R.ViewableBuffer(4*r*n),this.dynamicAttributeBuffer=new R.ViewableBuffer(4*r*a),this.indexBuffer=G(r);let s=new U.Geometry,o=0,l=0;for(let e in this._staticBuffer=new C.Buffer({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:w.BufferUsage.VERTEX|w.BufferUsage.COPY_DST}),this._dynamicBuffer=new C.Buffer({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:w.BufferUsage.VERTEX|w.BufferUsage.COPY_DST}),i){let t=i[e],r=(0,B.getAttributeInfoFromFormat)(t.format);t.dynamic?(s.addAttribute(t.attributeName,{buffer:this._dynamicBuffer,stride:4*this._dynamicStride,offset:4*o,format:t.format}),o+=r.size):(s.addAttribute(t.attributeName,{buffer:this._staticBuffer,stride:4*this._staticStride,offset:4*l,format:t.format}),l+=r.size)}s.addIndex(this.indexBuffer);let u=this.getParticleUpdate(i);this._dynamicUpload=u.dynamicUpdate,this._staticUpload=u.staticUpdate,this.geometry=s}}var D=e.i(57471),A=e.i(81107),z=e.i(27076),k=e.i(65654),E=e.i(31320),V=e.i(4864),I="\nstruct ParticleUniforms {\n  uProjectionMatrix:mat3x3<f32>,\n  uColor:vec4<f32>,\n  uResolution:vec2<f32>,\n  uRoundPixels:f32,\n};\n\n@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;\n\n@group(1) @binding(0) var uTexture: texture_2d<f32>;\n@group(1) @binding(1) var uSampler : sampler;\n\nstruct VSOutput {\n    @builtin(position) position: vec4<f32>,\n    @location(0) uv : vec2<f32>,\n    @location(1) color : vec4<f32>,\n  };\n@vertex\nfn mainVertex(\n  @location(0) aVertex: vec2<f32>,\n  @location(1) aPosition: vec2<f32>,\n  @location(2) aUV: vec2<f32>,\n  @location(3) aColor: vec4<f32>,\n  @location(4) aRotation: f32,\n) -> VSOutput {\n  \n   let v = vec2(\n       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),\n       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)\n   ) + aPosition;\n\n   let position = vec4((uniforms.uProjectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;\n\n  return VSOutput(\n   position,\n   aUV,\n   vColor,\n  );\n}\n\n@fragment\nfn mainFragment(\n  @location(0) uv: vec2<f32>,\n  @location(1) color: vec4<f32>,\n  @builtin(position) position: vec4<f32>,\n) -> @location(0) vec4<f32> {\n\n    var sample = textureSample(uTexture, uSampler, uv) * color;\n   \n    return sample;\n}";class O extends k.Shader{constructor(){super({glProgram:A.GlProgram.from({vertex:"attribute vec2 aVertex;\nattribute vec2 aUV;\nattribute vec4 aColor;\n\nattribute vec2 aPosition;\nattribute float aRotation;\n\nuniform mat3 uTranslationMatrix;\nuniform float uRound;\nuniform vec2 uResolution;\nuniform vec4 uColor;\n\nvarying vec2 vUV;\nvarying vec4 vColor;\n\nvec2 roundPixels(vec2 position, vec2 targetSize)\n{       \n    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n}\n\nvoid main(void){\n    float cosRotation = cos(aRotation);\n    float sinRotation = sin(aRotation);\n    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;\n    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;\n\n    vec2 v = vec2(x, y);\n    v = v + aPosition;\n\n    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n    if(uRound == 1.0)\n    {\n        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n    }\n\n    vUV = aUV;\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;\n}\n",fragment:"varying vec2 vUV;\nvarying vec4 vColor;\n\nuniform sampler2D uTexture;\n\nvoid main(void){\n    vec4 color = texture2D(uTexture, vUV) * vColor;\n    gl_FragColor = color;\n}"}),gpuProgram:z.GpuProgram.from({fragment:{source:I,entryPoint:"mainFragment"},vertex:{source:I,entryPoint:"mainVertex"}}),resources:{uTexture:E.Texture.WHITE.source,uSampler:new V.TextureStyle({}),uniforms:{uTranslationMatrix:{value:new g.Matrix,type:"mat3x3<f32>"},uColor:{value:new D.Color(0xffffff),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class L{validateRenderable(e){return!1}addRenderable(e,t){this.renderer.renderPipes.batch.break(t),t.add(e)}getBuffers(e){return e._gpuData[this.renderer.uid]||this._initBuffer(e)}_initBuffer(e){return e._gpuData[this.renderer.uid]=new F({size:e.particleChildren.length,properties:e._properties}),e._gpuData[this.renderer.uid]}updateRenderable(e){}execute(e){let t=e.particleChildren;if(0===t.length)return;let r=this.renderer,i=this.getBuffers(e);e.texture||(e.texture=t[0].texture);let n=this.state;i.update(t,e._childrenDirty),e._childrenDirty=!1,n.blendMode=(0,y.getAdjustedBlendModeBlend)(e.blendMode,e.texture._source);let a=this.localUniforms.uniforms,s=a.uTranslationMatrix;e.worldTransform.copyTo(s),s.prepend(r.globalUniforms.globalUniformData.projectionMatrix),a.uResolution=r.globalUniforms.globalUniformData.resolution,a.uRound=r._roundPixels|e._roundPixels,(0,p.color32BitToUniform)(e.groupColorAlpha,a.uColor,0),this.adaptor.execute(this,e)}destroy(){this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}constructor(e,t){this.state=h.State.for2d(),this.localUniforms=new T.UniformGroup({uTranslationMatrix:{value:new g.Matrix,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=e,this.adaptor=t,this.defaultShader=new O,this.state=h.State.for2d()}}class W extends L{constructor(e){super(e,new S)}}W.extension={type:[a.ExtensionType.WebGLPipes],name:"particle"};class Y{execute(e,t){let r=e.renderer,i=t.shader||e.defaultShader;i.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(e.localUniforms,!0),i.groups[1]=r.texture.getTextureBindGroup(t.texture);let n=e.state,a=e.getBuffers(t);r.encoder.draw({geometry:a.geometry,shader:t.shader||e.defaultShader,state:n,size:6*t.particleChildren.length})}}class X extends L{constructor(e){super(e,new Y)}}X.extension={type:[a.ExtensionType.WebGPUPipes],name:"particle"},a.extensions.add(W),a.extensions.add(X),e.s([],32537);var H=e.i(81481);function j(e,t){let{texture:r,bounds:i}=e,n=t._style._getFinalPadding();(0,H.updateQuadBounds)(i,t._anchor,r);let a=t._anchor._x*n*2,s=t._anchor._y*n*2;i.minX-=n-a,i.minY-=n-s,i.maxX-=n-a,i.maxY-=n-s}var q=e.i(40766);class N extends q.BatchableSprite{resolutionChange(){let e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){this._renderer.canvasText.returnTexture(this.texture),this._renderer=null}constructor(e){super(),this._renderer=e,e.runners.resolutionChange.add(this)}}class K{validateRenderable(e){return e._didTextUpdate}addRenderable(e,t){let r=this._getGpuText(e);e._didTextUpdate&&(this._updateGpuText(e),e._didTextUpdate=!1),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){let t=this._getGpuText(e);t._batcher.updateElement(t)}_updateGpuText(e){let t=this._getGpuText(e);t.texture&&this._renderer.canvasText.returnTexture(t.texture),e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,t.texture=this._renderer.canvasText.getTexture(e),j(t,e)}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){let t=new N(this._renderer);return t.renderable=e,t.transform=e.groupTransform,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}constructor(e){this._renderer=e}}K.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"text"};var Q=e.i(41163),J=e.i(49864),Z=e.i(73239),$=e.i(69553);let ee=new $.Bounds;function et(e,t,r,i){ee.minX=0,ee.minY=0,ee.maxX=e.width/i|0,ee.maxY=e.height/i|0;let n=Q.TexturePool.getOptimalTexture(ee.width,ee.height,i,!1);return n.source.uploadMethodId="image",n.source.resource=e,n.source.alphaMode="premultiply-alpha-on-upload",n.frame.width=t/i,n.frame.height=r/i,n.source.emit("update",n.source),n.updateUvs(),n}var er=e.i(24183);class ei{getTexture(e,t,r,i){var n;"string"==typeof e&&((0,J.deprecation)("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof Z.TextStyle||(e.style=new Z.TextStyle(e.style)),e.textureStyle instanceof V.TextureStyle||(e.textureStyle=new V.TextureStyle(e.textureStyle)),"string"!=typeof e.text&&(e.text=e.text.toString());let{text:a,style:s,textureStyle:o}=e,l=null!=(n=e.resolution)?n:this._renderer.resolution,{frame:u,canvasAndContext:d}=er.CanvasTextGenerator.getCanvasAndContext({text:a,style:s,resolution:l}),h=et(d.canvas,u.width,u.height,l);if(o&&(h.source.style=o),s.trim&&(u.pad(s.padding),h.frame.copyFrom(u),h.frame.scale(1/l),h.updateUvs()),s.filters){let e=this._applyFilters(h,s.filters);return this.returnTexture(h),er.CanvasTextGenerator.returnCanvasAndContext(d),e}return this._renderer.texture.initSource(h._source),er.CanvasTextGenerator.returnCanvasAndContext(d),h}returnTexture(e){let t=e.source;t.resource=null,t.uploadMethodId="unknown",t.alphaMode="no-premultiply-alpha",Q.TexturePool.returnTexture(e,!0)}renderTextToCanvas(){(0,J.deprecation)("8.10.0","CanvasTextSystem.renderTextToCanvas: no longer supported, use CanvasTextSystem.getTexture instead")}_applyFilters(e,t){let r=this._renderer.renderTarget.renderTarget,i=this._renderer.filter.generateFilteredTexture({texture:e,filters:t});return this._renderer.renderTarget.bind(r,!1),i}destroy(){this._renderer=null}constructor(e){this._renderer=e}}ei.extension={type:[a.ExtensionType.WebGLSystem,a.ExtensionType.WebGPUSystem,a.ExtensionType.CanvasSystem],name:"canvasText"},a.extensions.add(ei),a.extensions.add(K),e.s([],19182);var en=e.i(92206),ea=e.i(94425),es=e.i(78266),eo=e.i(81491),el=e.i(68372),eu=e.i(94111),ed=e.i(55443),eh=e.i(77953),ec=k;let ep={name:"local-uniform-msdf-bit",vertex:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        ",main:"\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        ",end:"\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        "},fragment:{header:"\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         ",main:"\n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        "}},ef={name:"local-uniform-msdf-bit",vertex:{header:"\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        ",main:"\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        ",end:"\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        "},fragment:{header:"\n            uniform float uDistance;\n         ",main:"\n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        "}},em={name:"msdf-bit",fragment:{header:"\n            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {\n\n                // MSDF\n                var median = msdfColor.r + msdfColor.g + msdfColor.b -\n                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n\n                // SDF\n                median = min(median, msdfColor.a);\n\n                var screenPxDistance = distance * (median - 0.5);\n                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));\n                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);\n                var coverage: f32 = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n\n            }\n        "}},ex={name:"msdf-bit",fragment:{header:"\n            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {\n\n                // MSDF\n                float median = msdfColor.r + msdfColor.g + msdfColor.b -\n                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n\n                // SDF\n                median = min(median, msdfColor.a);\n\n                float screenPxDistance = distance * (median - 0.5);\n                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));\n                float gamma = mix(1.0, 1.0 / 2.2, luma);\n                float coverage = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n            }\n        "}};class eg extends ec.Shader{constructor(e){let i=new T.UniformGroup({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new g.Matrix,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}});null!=t||(t=(0,eo.compileHighShaderGpuProgram)({name:"sdf-shader",bits:[el.colorBit,(0,eu.generateTextureBatchBit)(e),ep,em,ed.roundPixelsBit]})),null!=r||(r=(0,eo.compileHighShaderGlProgram)({name:"sdf-shader",bits:[el.colorBitGl,(0,eu.generateTextureBatchBitGl)(e),ef,ex,ed.roundPixelsBitGl]})),super({glProgram:r,gpuProgram:t,resources:{localUniforms:i,batchSamplers:(0,eh.getBatchSamplersUniformGroup)(e)}})}}var e_=e.i(3248),eT=e.i(87772);class ey extends ea.Graphics{destroy(){this.context.customShader&&this.context.customShader.destroy(),super.destroy()}}class eb{validateRenderable(e){let t=this._getGpuBitmapText(e);return this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){let r=this._getGpuBitmapText(e);ev(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}updateRenderable(e){let t=this._getGpuBitmapText(e);ev(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){let{context:r}=t,i=e_.BitmapFontManager.getFont(e.text,e._style);r.clear(),"none"===i.distanceField.type||r.customShader||(r.customShader=new eg(this._renderer.limits.maxBatchableTextures));let n=es.CanvasTextMetrics.graphemeSegmenter(e.text),a=e._style,s=i.baseLineOffset,o=(0,eT.getBitmapTextLayout)(n,a,i,!0),l=a.padding,u=o.scale,d=o.width,h=o.height+o.offsetY;a._stroke&&(d+=a._stroke.width/u,h+=a._stroke.width/u),r.translate(-e._anchor._x*d-l,-e._anchor._y*h-l).scale(u,u);let c=i.applyFillAsTint?a._fill.color:0xffffff,p=i.fontMetrics.fontSize,f=i.lineHeight;a.lineHeight&&(p=a.fontSize/u,f=a.lineHeight/u);let m=(f-p)/2;m-i.baseLineOffset<0&&(m=0);for(let e=0;e<o.lines.length;e++){let t=o.lines[e];for(let e=0;e<t.charPositions.length;e++){let n=t.chars[e],a=i.chars[n];if(null==a?void 0:a.texture){let i=a.texture;r.texture(i,c||"black",Math.round(t.charPositions[e]+a.xOffset),Math.round(s+a.yOffset+m),i.orig.width,i.orig.height)}}s+=f}}_getGpuBitmapText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){let t=new ey;return e._gpuData[this._renderer.uid]=t,this._updateContext(e,t),t}_updateDistanceField(e){let t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,i=en.Cache.get("".concat(r,"-bitmap")),{a:n,b:a,c:s,d:o}=e.groupTransform,l=(Math.abs(Math.sqrt(n*n+a*a))+Math.abs(Math.sqrt(s*s+o*o)))/2,u=i.baseRenderedFontSize/e._style.fontSize,d=l*i.distanceField.range*(1/u);t.customShader.resources.localUniforms.uniforms.uDistance=d}destroy(){this._renderer=null}constructor(e){this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuBitmapText")}}function ev(e,t){t.groupTransform=e.groupTransform,t.groupColorAlpha=e.groupColorAlpha,t.groupColor=e.groupColor,t.groupBlendMode=e.groupBlendMode,t.globalDisplayStatus=e.globalDisplayStatus,t.groupTransform=e.groupTransform,t.localDisplayStatus=e.localDisplayStatus,t.groupAlpha=e.groupAlpha,t._roundPixels=e._roundPixels}eb.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"bitmapText"},a.extensions.add(eb),e.s([],2283);var eP=q;class eS extends eP.BatchableSprite{resolutionChange(){let e=this.renderable;e._autoResolution&&e.onViewUpdate()}destroy(){this._renderer.htmlText.returnTexturePromise(this.texturePromise),this.texturePromise=null,this._renderer=null}constructor(e){super(),this.generatingTexture=!1,this._renderer=e,e.runners.resolutionChange.add(this)}}class eC{validateRenderable(e){return e._didTextUpdate}addRenderable(e,t){let r=this._getGpuText(e);e._didTextUpdate&&(this._updateGpuText(e).catch(e=>{console.error(e)}),e._didTextUpdate=!1,j(r,e)),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){let t=this._getGpuText(e);t._batcher.updateElement(t)}async _updateGpuText(e){e._didTextUpdate=!1;let t=this._getGpuText(e);if(t.generatingTexture)return;t.texturePromise&&(this._renderer.htmlText.returnTexturePromise(t.texturePromise),t.texturePromise=null),t.generatingTexture=!0,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;let r=this._renderer.htmlText.getTexturePromise(e);t.texturePromise=r,t.texture=await r;let i=e.renderGroup||e.parentRenderGroup;i&&(i.structureDidChange=!0),t.generatingTexture=!1,j(t,e)}_getGpuText(e){return e._gpuData[this._renderer.uid]||this.initGpuText(e)}initGpuText(e){let t=new eS(this._renderer);return t.renderable=e,t.transform=e.groupTransform,t.texture=E.Texture.EMPTY,t.bounds={minX:0,maxX:1,minY:0,maxY:0},t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}constructor(e){this._renderer=e}}eC.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"htmlText"};var ew=e.i(81735),eU=e.i(18279),eB=e.i(27402),eR=e.i(85830),eG=e.i(36566);async function eM(e){let t=await eB.DOMAdapter.get().fetch(e),r=await t.blob(),i=new FileReader;return await new Promise((e,t)=>{i.onloadend=()=>e(i.result),i.onerror=t,i.readAsDataURL(r)})}async function eF(e,t){let r=await eM(t);return'@font-face {\n        font-family: "'.concat(e.fontFamily,'";\n        font-weight: ').concat(e.fontWeight,";\n        font-style: ").concat(e.fontStyle,";\n        src: url('").concat(r,"');\n    }")}let eD=new Map;async function eA(e){let t=e.filter(e=>en.Cache.has("".concat(e,"-and-url"))).map(e=>{if(!eD.has(e)){let{entries:t}=en.Cache.get("".concat(e,"-and-url")),r=[];t.forEach(t=>{let i=t.url,n=t.faces.map(e=>({weight:e.weight,style:e.style}));r.push(...n.map(t=>eF({fontWeight:t.weight,fontStyle:t.style,fontFamily:e},i)))}),eD.set(e,Promise.all(r).then(e=>e.join("\n")))}return eD.get(e)});return(await Promise.all(t)).join("\n")}var ez=e.i(71467);class ek{getTexture(e){return this.getTexturePromise(e)}getTexturePromise(e){return this._buildTexturePromise(e)}async _buildTexturePromise(e){var t;let r,{text:i,style:n,resolution:a,textureStyle:s}=e,o=c.BigPool.get(eG.HTMLTextRenderData),l=function(e,t){let r=t.fontFamily,i=[],n={},a=e.match(/font-family:([^;"\s]+)/g);function s(e){n[e]||(i.push(e),n[e]=!0)}if(Array.isArray(r))for(let e=0;e<r.length;e++)s(r[e]);else s(r);for(let e in a&&a.forEach(e=>{s(e.split(":")[1].trim())}),t.tagStyles)s(t.tagStyles[e].fontFamily);return i}(i,n),u=await eA(l),d=(0,ez.measureHtmlText)(i,n,u,o),h=Math.ceil(Math.ceil(Math.max(1,d.width)+2*n.padding)*a),p=Math.ceil(Math.ceil(Math.max(1,d.height)+2*n.padding)*a),f=o.image;f.width=(0|h)+2,f.height=(0|p)+2;let m=function(e,t,r,i,n){let{domElement:a,styleElement:s,svgRoot:o}=n;a.innerHTML="<style>".concat(t.cssStyle,"</style><div style='padding:0;'>").concat(e,"</div>"),a.setAttribute("style","transform: scale(".concat(r,");transform-origin: top left; display: inline-block")),s.textContent=i;let{width:l,height:u}=n.image;return o.setAttribute("width",l.toString()),o.setAttribute("height",u.toString()),new XMLSerializer().serializeToString(o)}(i,n,a,u,o);await (t=function(){let{userAgent:e}=eB.DOMAdapter.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(e)}()&&l.length>0,new Promise(async e=>{t&&await new Promise(e=>setTimeout(e,100)),f.onload=()=>{e()},f.src="data:image/svg+xml;charset=utf8,".concat(encodeURIComponent(m)),f.crossOrigin="anonymous"})),this._createCanvas&&(r=function(e,t){let r=ew.CanvasPool.getOptimalCanvasAndContext(e.width,e.height,t),{context:i}=r;return i.clearRect(0,0,e.width,e.height),i.drawImage(e,0,0),r}(f,a));let x=et(r?r.canvas:f,f.width-2,f.height-2,a);return s&&(x.source.style=s),this._createCanvas&&(this._renderer.texture.initSource(x.source),ew.CanvasPool.returnCanvasAndContext(r)),c.BigPool.return(o),x}returnTexturePromise(e){e.then(e=>{this._cleanUp(e)}).catch(()=>{(0,eR.warn)("HTMLTextSystem: Failed to clean texture")})}_cleanUp(e){Q.TexturePool.returnTexture(e,!0),e.source.resource=null,e.source.uploadMethodId="unknown"}destroy(){this._renderer=null}constructor(e){this._renderer=e,this._createCanvas=e.type===eU.RendererType.WEBGPU}}ek.extension={type:[a.ExtensionType.WebGLSystem,a.ExtensionType.WebGPUSystem,a.ExtensionType.CanvasSystem],name:"htmlText"},a.extensions.add(ek),a.extensions.add(eC),e.s([],65251);var eE=e.i(17982),eV=e.i(35066),eI=k;let eO={name:"tiling-bit",vertex:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        "},fragment:{header:"\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        ",main:"\n\n            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped = coord;\n            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias = 0.;\n\n            if(unclamped.x == coord.x && unclamped.y == coord.y)\n            {\n                bias = -32.;\n            }\n\n            outColor = textureSampleBias(uTexture, uSampler, coord, bias);\n        "}},eL={name:"tiling-bit",vertex:{header:"\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n\n        ",main:"\n            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        "},fragment:{header:"\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        ",main:"\n\n        vec2 coord = vUV + ceil(uClampOffset - vUV);\n        coord = (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped = coord;\n        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n\n        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n\n        "}};class eW extends eI.Shader{updateUniforms(e,t,r,i,n,a){let s=this.resources.tilingUniforms,o=a.width,l=a.height,u=a.textureMatrix,d=s.uniforms.uTextureTransform;d.set(r.a*o/e,r.b*o/t,r.c*l/e,r.d*l/t,r.tx/e,r.ty/t),d.invert(),s.uniforms.uMapCoord=u.mapCoord,s.uniforms.uClampFrame=u.uClampFrame,s.uniforms.uClampOffset=u.uClampOffset,s.uniforms.uTextureTransform=d,s.uniforms.uSizeAnchor[0]=e,s.uniforms.uSizeAnchor[1]=t,s.uniforms.uSizeAnchor[2]=i,s.uniforms.uSizeAnchor[3]=n,a&&(this.resources.uTexture=a.source,this.resources.uSampler=a.source.style)}constructor(){null!=i||(i=(0,eo.compileHighShaderGpuProgram)({name:"tiling-sprite-shader",bits:[eV.localUniformBit,eO,ed.roundPixelsBit]})),null!=n||(n=(0,eo.compileHighShaderGlProgram)({name:"tiling-sprite-shader",bits:[eV.localUniformBitGl,eL,ed.roundPixelsBitGl]})),super({glProgram:n,gpuProgram:i,resources:{localUniforms:new T.UniformGroup({uTransformMatrix:{value:new g.Matrix,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:new T.UniformGroup({uMapCoord:{value:new g.Matrix,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new g.Matrix,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}}),uTexture:E.Texture.EMPTY.source,uSampler:E.Texture.EMPTY.source.style}})}}var eY=eE;class eX extends eY.MeshGeometry{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}let eH=new eX;class ej{destroy(){var e;this.geometry.destroy(),null==(e=this.shader)||e.destroy()}constructor(){this.canBatch=!0,this.geometry=new eE.MeshGeometry({indices:eH.indices.slice(),positions:eH.positions.slice(),uvs:eH.uvs.slice()})}}class eq{validateRenderable(e){let t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);let i=t.canBatch;if(i&&i===r){let{batchableMesh:r}=t;return!r._batcher.checkAndUpdateTexture(r,e.texture)}return r!==i}addRenderable(e,t){let r=this._renderer.renderPipes.batch;this._updateCanBatch(e);let i=this._getTilingSpriteData(e),{geometry:n,canBatch:a}=i;if(a){i.batchableMesh||(i.batchableMesh=new b);let a=i.batchableMesh;e.didViewUpdate&&(this._updateBatchableMesh(e),a.geometry=n,a.renderable=e,a.transform=e.groupTransform,a.setTexture(e._texture)),a.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(a,t)}else r.break(t),i.shader||(i.shader=new eW),this.updateRenderable(e),t.add(e)}execute(e){let{shader:t}=this._getTilingSpriteData(e);t.groups[0]=this._renderer.globalUniforms.bindGroup;let r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,(0,p.color32BitToUniform)(e.groupColorAlpha,r.uColor,0),this._state.blendMode=(0,y.getAdjustedBlendModeBlend)(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:eH,shader:t,state:this._state})}updateRenderable(e){let t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){let{batchableMesh:r}=t;e.didViewUpdate&&this._updateBatchableMesh(e),r._batcher.updateElement(r)}else if(e.didViewUpdate){let{shader:r}=t;r.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}}_getTilingSpriteData(e){return e._gpuData[this._renderer.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){let t=new ej;return t.renderable=e,e._gpuData[this._renderer.uid]=t,t}_updateBatchableMesh(e){let{geometry:t}=this._getTilingSpriteData(e),r=e.texture.source.style;"repeat"!==r.addressMode&&(r.addressMode="repeat",r.update()),function(e,t){let r=e.texture,i=r.frame.width,n=r.frame.height,a=0,s=0;e.applyAnchorToTexture&&(a=e.anchor.x,s=e.anchor.y),t[0]=t[6]=-a,t[2]=t[4]=1-a,t[1]=t[3]=-s,t[5]=t[7]=1-s;let o=g.Matrix.shared;o.copyFrom(e._tileTransform.matrix),o.tx/=e.width,o.ty/=e.height,o.invert(),o.scale(e.width/i,e.height/n),function(e,t,r,i){let n=0,a=e.length/2,s=i.a,o=i.b,l=i.c,u=i.d,d=i.tx,h=i.ty;for(r*=2;n<a;){let i=e[r],a=e[r+1];e[r]=s*i+l*a+d,e[r+1]=o*i+u*a+h,r+=t,n++}}(t,2,0,o)}(e,t.uvs);var i=t.positions;let n=e.anchor.x,a=e.anchor.y;i[0]=-n*e.width,i[1]=-a*e.height,i[2]=(1-n)*e.width,i[3]=-a*e.height,i[4]=(1-n)*e.width,i[5]=(1-a)*e.height,i[6]=-n*e.width,i[7]=(1-a)*e.height}destroy(){this._renderer=null}_updateCanBatch(e){let t=this._getTilingSpriteData(e),r=e.texture,i=!0;return this._renderer.type===eU.RendererType.WEBGL&&(i=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(i||r.source.isPowerOfTwo),t.canBatch}constructor(e){this._state=h.State.default2d,this._renderer=e}}eq.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"tilingSprite"},a.extensions.add(eq),e.s([],21484);var eN=e.i(55246);class eK extends b{destroy(){this.geometry.destroy()}constructor(){super(),this.geometry=new eN.NineSliceGeometry}}class eQ{addRenderable(e,t){let r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){let t=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){let t=this._getGpuSprite(e);return!t._batcher.checkAndUpdateTexture(t,e._texture)}_updateBatchableSprite(e,t){t.geometry.update(e),t.setTexture(e._texture)}_getGpuSprite(e){return e._gpuData[this._renderer.uid]||this._initGPUSprite(e)}_initGPUSprite(e){let t=e._gpuData[this._renderer.uid]=new eK;return t.renderable=e,t.transform=e.groupTransform,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,e.didViewUpdate||this._updateBatchableSprite(e,t),t}destroy(){this._renderer=null}constructor(e){this._renderer=e}}eQ.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"nineSliceSprite"},a.extensions.add(eQ),e.s([],86492);class eJ{push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){"pushFilter"===e.action?this._renderer.filter.push(e):"popFilter"===e.action&&this._renderer.filter.pop()}destroy(){this._renderer=null}constructor(e){this._renderer=e}}eJ.extension={type:[a.ExtensionType.WebGLPipes,a.ExtensionType.WebGPUPipes,a.ExtensionType.CanvasPipes],name:"filter"};let eZ=new U.Geometry({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:8,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class e${constructor(){this.skip=!1,this.inputTexture=null,this.backTexture=null,this.filters=null,this.bounds=new $.Bounds,this.container=null,this.blendRequired=!1,this.outputRenderSurface=null,this.globalFrame={x:0,y:0,width:0,height:0}}}class e0{get activeBackTexture(){var e;return null==(e=this._activeFilterData)?void 0:e.backTexture}push(e){let t=this.renderer,r=e.filterEffect.filters,i=this._pushFilterData();i.skip=!1,i.filters=r,i.container=e.container,i.outputRenderSurface=t.renderTarget.renderSurface;let n=t.renderTarget.renderTarget.colorTexture.source,a=n.resolution,s=n.antialias;if(0===r.length){i.skip=!0;return}let o=i.bounds;if(this._calculateFilterArea(e,o),this._calculateFilterBounds(i,t.renderTarget.rootViewPort,s,a,1),i.skip)return;let l=this._getPreviousFilterData(),u=this._findFilterResolution(a),d=0,h=0;l&&(d=l.bounds.minX,h=l.bounds.minY),this._calculateGlobalFrame(i,d,h,u,n.width,n.height),this._setupFilterTextures(i,o,t,l)}generateFilteredTexture(e){let{texture:t,filters:r}=e,i=this._pushFilterData();this._activeFilterData=i,i.skip=!1,i.filters=r;let n=t.source,a=n.resolution,s=n.antialias;if(0===r.length)return i.skip=!0,t;let o=i.bounds;if(o.addRect(t.frame),this._calculateFilterBounds(i,o.rectangle,s,a,0),i.skip)return t;this._calculateGlobalFrame(i,0,0,a,n.width,n.height),i.outputRenderSurface=Q.TexturePool.getOptimalTexture(o.width,o.height,i.resolution,i.antialias),i.backTexture=E.Texture.EMPTY,i.inputTexture=t,this.renderer.renderTarget.finishRenderPass(),this._applyFiltersToTexture(i,!0);let l=i.outputRenderSurface;return l.source.alphaMode="premultiplied-alpha",l}pop(){let e=this.renderer,t=this._popFilterData();t.skip||(e.globalUniforms.pop(),e.renderTarget.finishRenderPass(),this._activeFilterData=t,this._applyFiltersToTexture(t,!1),t.blendRequired&&Q.TexturePool.returnTexture(t.backTexture),Q.TexturePool.returnTexture(t.inputTexture))}getBackTexture(e,t,r){let i=e.colorTexture.source._resolution,n=Q.TexturePool.getOptimalTexture(t.width,t.height,i,!1),a=t.minX,s=t.minY;r&&(a-=r.minX,s-=r.minY),a=Math.floor(a*i),s=Math.floor(s*i);let o=Math.ceil(t.width*i),l=Math.ceil(t.height*i);return this.renderer.renderTarget.copyToTexture(e,n,{x:a,y:s},{width:o,height:l},{x:0,y:0}),n}applyFilter(e,t,r,i){let n=this.renderer,a=this._activeFilterData,s=a.outputRenderSurface===r,o=n.renderTarget.rootRenderTarget.colorTexture.source._resolution,l=this._findFilterResolution(o),u=0,d=0;if(s){let e=this._findPreviousFilterOffset();u=e.x,d=e.y}this._updateFilterUniforms(t,r,a,u,d,l,s,i),this._setupBindGroupsAndRender(e,t,n)}calculateSpriteMatrix(e,t){let r=this._activeFilterData,i=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),n=t.worldTransform.copyTo(g.Matrix.shared),a=t.renderGroup||t.parentRenderGroup;return a&&a.cacheToLocalTransform&&n.prepend(a.cacheToLocalTransform),n.invert(),i.prepend(n),i.scale(1/t.texture.orig.width,1/t.texture.orig.height),i.translate(t.anchor.x,t.anchor.y),i}destroy(){}_setupBindGroupsAndRender(e,t,r){if(r.renderPipes.uniformBatch){let e=r.renderPipes.uniformBatch.getUboResource(this._filterGlobalUniforms);this._globalFilterBindGroup.setResource(e,0)}else this._globalFilterBindGroup.setResource(this._filterGlobalUniforms,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,r.encoder.draw({geometry:eZ,shader:e,state:e._state,topology:"triangle-list"}),r.type===eU.RendererType.WEBGL&&r.renderTarget.finishRenderPass()}_setupFilterTextures(e,t,r,i){if(e.backTexture=E.Texture.EMPTY,e.blendRequired){r.renderTarget.finishRenderPass();let n=r.renderTarget.getRenderTarget(e.outputRenderSurface);e.backTexture=this.getBackTexture(n,t,null==i?void 0:i.bounds)}e.inputTexture=Q.TexturePool.getOptimalTexture(t.width,t.height,e.resolution,e.antialias),r.renderTarget.bind(e.inputTexture,!0),r.globalUniforms.push({offset:t})}_calculateGlobalFrame(e,t,r,i,n,a){let s=e.globalFrame;s.x=t*i,s.y=r*i,s.width=n*i,s.height=a*i}_updateFilterUniforms(e,t,r,i,n,a,s,o){let l=this._filterGlobalUniforms.uniforms,u=l.uOutputFrame,d=l.uInputSize,h=l.uInputPixel,c=l.uInputClamp,p=l.uGlobalFrame,f=l.uOutputTexture;s?(u[0]=r.bounds.minX-i,u[1]=r.bounds.minY-n):(u[0]=0,u[1]=0),u[2]=e.frame.width,u[3]=e.frame.height,d[0]=e.source.width,d[1]=e.source.height,d[2]=1/d[0],d[3]=1/d[1],h[0]=e.source.pixelWidth,h[1]=e.source.pixelHeight,h[2]=1/h[0],h[3]=1/h[1],c[0]=.5*h[2],c[1]=.5*h[3],c[2]=e.frame.width*d[2]-.5*h[2],c[3]=e.frame.height*d[3]-.5*h[3];let m=this.renderer.renderTarget.rootRenderTarget.colorTexture;p[0]=i*a,p[1]=n*a,p[2]=m.source.width*a,p[3]=m.source.height*a,t instanceof E.Texture&&(t.source.resource=null);let x=this.renderer.renderTarget.getRenderTarget(t);this.renderer.renderTarget.bind(t,!!o),t instanceof E.Texture?(f[0]=t.frame.width,f[1]=t.frame.height):(f[0]=x.width,f[1]=x.height),f[2]=x.isRoot?-1:1,this._filterGlobalUniforms.update()}_findFilterResolution(e){let t=this._filterStackIndex-1;for(;t>0&&this._filterStack[t].skip;)--t;return t>0&&this._filterStack[t].inputTexture?this._filterStack[t].inputTexture.source._resolution:e}_findPreviousFilterOffset(){let e=0,t=0,r=this._filterStackIndex;for(;r>0;){r--;let i=this._filterStack[r];if(!i.skip){e=i.bounds.minX,t=i.bounds.minY;break}}return{x:e,y:t}}_calculateFilterArea(e,t){if(e.renderables?!function(e,t){t.clear();let r=t.matrix;for(let r=0;r<e.length;r++){let i=e[r];i.globalDisplayStatus<7||(t.matrix=i.worldTransform,t.addBounds(i.bounds))}t.matrix=r}(e.renderables,t):e.filterEffect.filterArea?(t.clear(),t.addRect(e.filterEffect.filterArea),t.applyMatrix(e.container.worldTransform)):e.container.getFastGlobalBounds(!0,t),e.container){let r=(e.container.renderGroup||e.container.parentRenderGroup).cacheToLocalTransform;r&&t.applyMatrix(r)}}_applyFiltersToTexture(e,t){let r=e.inputTexture,i=e.bounds,n=e.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(e.backTexture.source,3),1===n.length)n[0].apply(this,r,e.outputRenderSurface,t);else{let r=e.inputTexture,a=Q.TexturePool.getOptimalTexture(i.width,i.height,r.source._resolution,!1),s=a,o=0;for(o=0;o<n.length-1;++o){n[o].apply(this,r,s,!0);let e=r;r=s,s=e}n[o].apply(this,r,e.outputRenderSurface,t),Q.TexturePool.returnTexture(a)}}_calculateFilterBounds(e,t,r,i,n){let a=this.renderer,s=e.bounds,o=e.filters,l=1/0,u=0,d=!0,h=!1,c=!1,p=!0;for(let e=0;e<o.length;e++){var f,m;let t=o[e];if(l=Math.min(l,"inherit"===t.resolution?i:t.resolution),u+=t.padding,"off"===t.antialias?d=!1:"inherit"===t.antialias&&d&&(d=r),t.clipToViewport||(p=!1),!(t.compatibleRenderers&a.type)){c=!1;break}if(t.blendRequired&&!(null==(m=null==(f=a.backBuffer)?void 0:f.useBackBuffer)||m)){(0,eR.warn)("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),c=!1;break}c=t.enabled||c,h||(h=t.blendRequired)}if(!c||(p&&s.fitBounds(0,t.width/i,0,t.height/i),s.scale(l).ceil().scale(1/l).pad((0|u)*n),!s.isPositive)){e.skip=!0;return}e.antialias=d,e.resolution=l,e.blendRequired=h}_popFilterData(){return this._filterStackIndex--,this._filterStack[this._filterStackIndex]}_getPreviousFilterData(){let e,t=this._filterStackIndex-1;for(;t>1&&(t--,(e=this._filterStack[t]).skip););return e}_pushFilterData(){let e=this._filterStack[this._filterStackIndex];return e||(e=this._filterStack[this._filterStackIndex]=new e$),this._filterStackIndex++,e}constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new T.UniformGroup({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new _.BindGroup({}),this.renderer=e}}e0.extension={type:[a.ExtensionType.WebGLSystem,a.ExtensionType.WebGPUSystem],name:"filter"},a.extensions.add(e0),a.extensions.add(eJ)}]);